@model PousadaIdentity.Entities.Reserva
@using Microsoft.AspNetCore.Http
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "Create";
    <link link rel="stylesheet" href="/css/Create_Reserva.css" asp-append-version="true" />
}
<head>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link rel="stylesheet" href="//code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
<script src="https://code.jquery.com/jquery-3.6.0.js"></script>
<script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>
<script>

    /*
    $(document).ready(function () {
        $('#CheckIn, #CheckOut, #QuartoID,#increase, #decrease').on('change click', function () {
            calcularValorTotal();
        });

        function calcularValorTotal() {
            var checkIn = new Date($('#CheckIn').val());
            var checkUp = new Date($('#CheckOut').val());
            var quartoID = $('#QuartoID').val();

            if (!isNaN(checkIn) && !isNaN(checkUp) && quartoID) {
                var numeroDias = Math.ceil((checkUp - checkIn) / (1000 * 60 * 60 * 24));

                $.get('/Reservas/ObterPrecoQuartoExibicao', { quartoID: quartoID }, function (data) {
                    if (data && data.preco) {
                        var valorTotal = numeroDias * data.preco;
                        $('#ValorExibido').val(valorTotal.toFixed(2));
                        ViewBag.ValorTotalReserva = valorTotal; // onde "valorTotal" é o valor calculado

                    } else {
                        console.error('Erro ao obter preço do quarto.');
                    }
                });
            }
        }
    });*/



        $(document).ready(function () {
            $('#CheckIn, #CheckOut, #QuartoID, #increase, #decrease').on('change click', function () {
                calcularValorTotal();
            });

            function calcularValorTotal() {
                // Função para fazer o parsing de datas no formato "dd/mm/yy" para objetos Date
                function parseDate(input) {
                    var parts = input.split('/');
                    if (parts.length === 3) {
                        return new Date('20' + parts[2], parts[1] - 1, parts[0]);
                    }
                    return null;
                }

                var checkInText = $('#CheckIn').val();
                var checkOutText = $('#CheckOut').val();
                var quartoID = $('#QuartoID').val();

                var checkIn = parseDate(checkInText);
                var checkOut = parseDate(checkOutText);

                if (checkIn && checkOut && quartoID) {
                    var numeroDias = Math.ceil((checkOut - checkIn) / (1000 * 60 * 60 * 24));

                    $.get('/Reservas/ObterPrecoQuartoExibicao', { quartoID: quartoID }, function (data) {
                        if (data && data.preco) {
                            var valorTotal = numeroDias * data.preco;
                            $('#ValorExibido').val(valorTotal.toFixed(2));
                            // Você não pode definir ViewBag.ValorTotalReserva aqui porque o ViewBag é uma propriedade do servidor no ASP.NET MVC.
                            // Se você deseja passar esse valor para o servidor, você deve fazer uma solicitação HTTP, por exemplo, usando $.ajax.
                        } else {
                            console.error('Erro ao obter preço do quarto.');
                        }
                    });
                }
            }
        });

    // Função para atualizar os campos em tempo real
    function atualizarCampos() {
        var quartoId = $('#QuartoID').val();

        if (quartoId) {
            $.get('/Reservas/ObterInformacoesQuarto', { quartoId: quartoId }, function (data) {
                if (data && data.preco && data.tipo) {
                    $('#PrecoQuartoInput').val(data.preco);
                    $('#TipoQuartoInput').val(data.tipo);
                    $('#ImagemQuarto').attr('src', 'data:image/jpeg;base64,' + data.imagem);
                    console.log("imagem: " + data.imagem);
                } else {
                    console.error('Erro ao obter informações do quarto.');
                }
            });
        }
    }

    $(document).ready(function () {
        // Chame a função na carga da página
        atualizarCampos();

        // Adicione um manipulador de evento ao 'change' do select
        $('#QuartoID').on('change', function () {
            atualizarCampos();
        });
    });



    document.addEventListener("DOMContentLoaded", function () {
        var select = document.getElementById("QuartoID");
        var increaseButton = document.getElementById("increase");
        var decreaseButton = document.getElementById("decrease");

        // Função para verificar e atualizar a desabilitação dos botões
        function updateButtonAvailability() {
            var selectedIndex = select.selectedIndex;
            var optionCount = select.options.length;

            increaseButton.disabled = selectedIndex >= optionCount - 1;
            decreaseButton.disabled = selectedIndex <= 0;
        }

        // Inicialmente, atualize o estado dos botões
        updateButtonAvailability();

        // Adicione ouvintes de eventos aos botões para atualizar o estado ao clicar
        increaseButton.addEventListener("click", function () {
            select.selectedIndex = Math.min(select.options.length - 1, select.selectedIndex + 1);
            atualizarCampos();
            updateButtonAvailability();
        });

        decreaseButton.addEventListener("click", function () {
            select.selectedIndex = Math.max(0, select.selectedIndex - 1);
            atualizarCampos();
            updateButtonAvailability();
        });
    });


    document.addEventListener("DOMContentLoaded", function () {
        var select = document.getElementById("QuartoID");
        var increaseButton = document.getElementById("increase");
        var decreaseButton = document.getElementById("decrease");

        // Função para verificar e atualizar a desabilitação dos botões
        function updateButtonAvailability() {
            var selectedIndex = select.selectedIndex;
            var optionCount = select.options.length;

            increaseButton.disabled = selectedIndex >= optionCount - 1;
            decreaseButton.disabled = selectedIndex <= 0;
        }

        // Inicialmente, atualize o estado dos botões
        updateButtonAvailability();

        // Adicione ouvintes de eventos aos botões para atualizar o estado ao clicar
        increaseButton.addEventListener("click", function () {
            select.selectedIndex = Math.min(select.options.length - 1, select.selectedIndex + 1);

            updateButtonAvailability();
            calcularValorTotal(); // Atualize o valor total após alterar a seleção
        });

        decreaseButton.addEventListener("click", function () {
            select.selectedIndex = Math.max(0, select.selectedIndex - 1);
            updateButtonAvailability();
            calcularValorTotal(); // Atualize o valor total após alterar a seleção
        });
    });




            $(document).ready(function () {
                var selectedQuartoID;
                var datesUnavailable = [];

                // Função para carregar datas indisponíveis
                function loadDatesUnavailable() {
                    selectedQuartoID = $('#QuartoID').val();
                    if (!selectedQuartoID) {
                        return;
                    }
                    $.get('/Reservas/GetDatesUnavailable', { quartoId: selectedQuartoID }, function (data) {
                        datesUnavailable = data.map(function (date) {
                            return new Date(date);
                        });
                    console.log("Datas: ", datesUnavailable)

                        // Configurar o Datepicker para o campo CheckIn
                        $("#CheckIn").datepicker({
                            dateFormat: "dd/mm/yy",
                            minDate: 1,
                            beforeShowDay: function (date) {
                                var stringDate = $.datepicker.formatDate('dd/mm/yy', date);
                                var isDateAvailable = !datesUnavailable.some(function (unavailable) {
                                    return date.getTime() === unavailable.getTime();
                                });

                                return [date >= new Date() && isDateAvailable];
                            }
                        });

                        // Configurar o Datepicker para o campo CheckOut
                        $("#CheckOut").datepicker({
                            dateFormat: "dd/mm/yy",
                            minDate: 1,
                            beforeShowDay: function (date) {
                                var stringDate = $.datepicker.formatDate('dd/mm/yy', date);
                                var isDateAvailable = !datesUnavailable.some(function (unavailable) {
                                    return date.getTime() === unavailable.getTime();
                                });

                                return [date >= new Date() && isDateAvailable];
                            }
                        });
                    $("#CheckIn, #CheckOut").attr("readonly", true);

                    });
                }

                

            function updateDatesAndID() {
                loadDatesUnavailable();
            }

            // Chame a função para carregar datas indisponíveis quando a página carregar
            loadDatesUnavailable();

            $('#QuartoID').on('change', function () {
                updateDatesAndID();
            });

            // Adicione ouvintes de eventos aos botões "increase" e "decrease"
            $('#increase, #decrease').on('click', function () {
                updateDatesAndID();
            });
        });



</script>
</head>


<style>

    label {
        color: black;
    }

    body {
        background-color: lightgrey;
    }

<<<<<<< HEAD
=======

   

>>>>>>> master
</style>


<!--
<h1>Create</h1>

<h4>Reserva</h4>
<hr />
<div class="row">
    <div class="col-md-4">

        <form asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="All" class="text-danger">

                    <div>
                    <img id="ImagemQuarto" style="width:600px;height:300px;display:inline-block;" />
                    <div class="form-group">
                    <div style="visibility:hidden;display:none;">

                            <label asp-for="QuartoID" class="control-label"></label>
                            <select asp-for="QuartoID" class="form-control" asp-items="ViewBag.QuartoID" id="QuartoID">
                            </select>
                        </div>

                        <button type="button" id="decrease"><</button>
                        <button type="button" id="increase">></button>
                    </div>
                    <label class="control-label">Preço do Quarto</label>
                    <input class="form-control" id="PrecoQuartoInput" name="PrecoQuartoInput" readonly>
                    <label class="control-label">Tipo de Quarto</label>
                    <input class="form-control" id="TipoQuartoInput" name="TipoQuartoInput" readonly>
                    </div>

            <div class="form-group">
                <label class="control-label">Valor Total</label>
                <input class="form-control" id="ValorExibido" value="@ViewBag.ValorTotalReserva" type="text"/>

                <input asp-for="ValorTotalReserva" class="form-control" style="visibility:hidden;display:none;" readonly/>
                <span asp-validation-for="ValorTotalReserva" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CheckIn" class="control-label"></label>
                <input asp-for="CheckIn" id="CheckIn" type="text" placeholder="Insira a data para entrada..." class="form-control" />
                <span asp-validation-for="CheckIn" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CheckOut" class="control-label"></label>
                <input asp-for="CheckOut" id="CheckOut" type="text" placeholder="Insira a data para saída..." class="form-control" />
                <span asp-validation-for="CheckOut" class="text-danger"></span>
            </div>
            <div class="form-group" style="display:none;visibility:hidden;">
                <label asp-for="DataReservada" class="control-label"></label>
                <input asp-for="DataReservada" class="form-control" value="@DateTime.Now.ToString("yyyy-MM-dd")" type="text" />
                <span asp-validation-for="DataReservada" class="text-danger"></span>
            </div>

            <div class="form-group" style="display:none;visibility:hidden;">
                <label asp-for="Estado" class="control-label"></label>
                <select asp-for="Estado" class="form-control">
                <option value="Não Pago">Não Pago</option>
                <option value="Pago">Pago</option>
                <span asp-validation-for="Estado" class="text-danger"></span>
                    </select>

            </div>
            <div class="form-group" style="display:none;visibility:hidden;">
                <label asp-for="PessoaId" class="control-label"></label>
                <input asp-for="PessoaId" class="form-control" value="@HttpContextAccessor.HttpContext.Session.GetInt32("SessionPessoaId")"/>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
            </div>
        </form>
    </div>
</div>
<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
-->

<div class="container">

    <div class="faixa_entrar">
        <svg class="line_entrar_1"></svg>
        <svg class="line_entrar_2"></svg>
        <p>Reservar</p>
    </div>

    <div class="container">
        <div class="background_login_principal">
            <div class="faixa_aviso_login">
                <p>Não possui <br />conta?</p>
            </div>
            <div class="text_aviso_cadastrar_login">
                <p>Clique <a asp-controller="Account" asp-action="Register">aqui</a> para se <br /> cadastrar.</p>
            </div>
            <div class="faixa_duvida_login">
                <p>Tem alguma <br />duvida?</p>
            </div>
            <div class="text_aviso_duvida_login">
                <p>Entre em contato <br /> conosco via whatsapp <br /> ou telefone:  <br /></p>
            </div>
            <div class="faixa_whatsapp_login">
                <img src="/Imagens/icon_whatsapp.png" />
                <p>(16) X XXXX-XXXX</p>
            </div>
            <div class="faixa_telefone_login">
                <img src="/Imagens/icon_telefone (2).png" />
                <p>(16) XXXX-XXXX</p>
            </div>
            <div class="faixa_observacao_login">
                <p>
                    Observação: <br />
                    Horário de atendimento das <br /> 8:00h às 21:00h.
                </p>
            </div>
            <div class="background_form">
                <p>Dados para reserva</p>
                <center>
                    <svg class="line_form"></svg>
                </center>
                <form method="post" class="container_form">
                    <div asp-validation-summary="All" class="text-danger row">

                        <div class="form-group col">
                            <label asp-for="CheckIn" class="control-label">Entrada</label>
                            <input asp-for="CheckIn" class="form-control" id="CheckIn" />
                            <span asp-validation-for="CheckIn" class="text-danger"></span>
                        </div>
                        <div class="form-group col">
                            <label asp-for="CheckOut" class="control-label">Saída</label>
                            <input asp-for="CheckOut" class="form-control" id="CheckUp" />
                            <span asp-validation-for="CheckOut" class="text-danger"></span>
                        </div>
                        @* <button type="submit" class="btn btn-primary mt-02">Entrar</button> *@

                        @* <center>
                        <div class="btn_form_entrar">
                        <!-- <a class="desc_btn_form_entrar" href="#">Entrar</a> -->
                        <button type="submit" class="desc_btn_form_entrar">Entrar</button>

                        </div>
                        </center> *@
                    </div>
                </form>
                <p>Selecione o quarto desejado</p>
                <center>
                    <svg class="line_form"></svg>
                </center>
                <div id="carouselExampleCaptions" class="carousel slide" style="padding: 2rem 2rem;">
                    <div class="carousel-indicators">
                        <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
                        <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="1" aria-label="Slide 2"></button>
                        <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="2" aria-label="Slide 3"></button>
                    </div>
                    <div class="carousel-inner">
                        <div class="carousel-item active">
                            <img src="/Imagens/palimar_img.png" class="d-block w-50" alt="...">
                            <div class="carousel-caption d-none d-md-block">
                                <h5>First slide label</h5>
                                <p>Some representative placeholder content for the first slide.</p>
                            </div>
                        </div>
                        <div class="carousel-item">
                            <img src="..." class="d-block w-100" alt="...">
                            <div class="carousel-caption d-none d-md-block">
                                <h5>Second slide label</h5>
                                <p>Some representative placeholder content for the second slide.</p>
                            </div>
                        </div>
                        <div class="carousel-item">
                            <img src="..." class="d-block w-100" alt="...">
                            <div class="carousel-caption d-none d-md-block">
                                <h5>Third slide label</h5>
                                <p>Some representative placeholder content for the third slide.</p>
                            </div>
                        </div>
                    </div>
                    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>